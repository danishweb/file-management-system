openapi: 3.0.0
info:
  title: File Management System API
  description: |
    Complete API documentation for the File Management System.
    This system consists of three microservices:
    1. User Service - Authentication and user management
    2. Hierarchy Service - File/folder structure management
    3. Version Service - File versioning and storage
  version: 1.0.0
  contact:
    name: Your Name
    email: your.email@example.com

servers:
  - url: http://localhost:5000/api
    description: Local Development Gateway

tags:
  - name: Authentication
    description: User authentication operations
  - name: Files
    description: File management operations
  - name: Folders
    description: Folder structure operations
  - name: Versions
    description: File versioning operations

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from the login endpoint

  schemas:
    # User Service Schemas
    User:
      type: object
      properties:
        username:
          type: string
          example: john_doe
        email:
          type: string
          format: email
          example: john@example.com
        password:
          type: string
          format: password
          example: StrongPass123
      required:
        - username
        - email
        - password

    LoginCredentials:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - email
        - password

    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        user:
          type: object
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string

paths:
  # User Service Endpoints
  /users/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Create a new user account with username, email, and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'

  /users/login:
    post:
      tags:
        - Authentication
      summary: Login to existing account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCredentials'
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'

  /users/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: New access token generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string

  # Note: Add Hierarchy Service and Version Service endpoints here
  # This is a placeholder for other service endpoints that we'll add later
